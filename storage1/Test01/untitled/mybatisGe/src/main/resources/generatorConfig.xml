<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <properties resource="config.properties"/>

    <!-- 引入mysql-connector-java-5.1.30.jar位置 -->
<!--    <classPathEntry location="E:/maven/repository/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar" />-->


    <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
            <property name="caseSensitive" value="true" />
        </plugin>
<!--        <commentGenerator>-->
<!--            <property name="suppressAllComments" value="true" />-->
<!--        </commentGenerator>-->

        <!-- 数据库连接 -->
<!--        <jdbcConnection driverClass="${jdbc.driverClass}"-->
<!--                        connectionURL="${jdbc.url}"-->
<!--                        userId="${jdbc.user}"-->
<!--                        password="${jdbc.password}">-->
<!--        </jdbcConnection>-->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/db2021?useUnicode=true&amp;characterEncoding=UTF8&amp;useSSL=false"
                        userId="root"
                        password="123456">
        </jdbcConnection>

        <!--
                             默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
             true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
        -->
<!--        <javaTypeResolver>-->
<!--            <property name="forceBigDecimals" value="false" />-->
<!--        </javaTypeResolver>-->

        <!--
         生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径
      也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下
     -->
        <javaModelGenerator targetPackage="${package.name}.entities" targetProject="src\main\java">
        </javaModelGenerator>

        <!--对应的mapper.xml文件  -->
        <sqlMapGenerator targetPackage="${package.name}.mapper.xml" targetProject="src\main\java">
        </sqlMapGenerator>

        <!-- 对应的Mapper接口类文件 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${package.name}.mapper" targetProject="src\main\java">
        </javaClientGenerator>

        <!-- 生成那些表，tableName对应数据库表，domainObjectName对应实体类名 -->
        <table tableName="t_user"
               domainObjectName="User">
            <generatedKey column="id" sqlStatement="JDBC"/>
        </table>

    </context>
</generatorConfiguration>